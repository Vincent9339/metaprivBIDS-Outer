name: Run PyTest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true
      R_LIBS_USER: $HOME/R/x86_64-pc-linux-gnu-library/4.0  # Custom R library path

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create a writable R library path
        run: mkdir -p $HOME/R/x86_64-pc-linux-gnu-library/4.0

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-R-${{ hashFiles('**/install.R') }}
          restore-keys: |
            ${{ runner.os }}-R-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            r-base r-base-dev libtirpc-dev --quiet

      - name: Install only required R package
        run: Rscript -e 'if (!requireNamespace("sdcMicro", quietly = TRUE)) install.packages("sdcMicro", repos = "https://cloud.r-project.org", lib = file.path(Sys.getenv("HOME"), "R", "x86_64-pc-linux-gnu-library", "4.0"))'
      
      - name: Verify farver installation
        run: Rscript -e 'install.packages("farver", repos = "https://cloud.r-project.org", lib = file.path(Sys.getenv("HOME"), "R", "x86_64-pc-linux-gnu-library", "4.0"))'
        
      - name: Verify sdcMicro installation
        run: Rscript -e 'if (!require("sdcMicro", lib=file.path(Sys.getenv("HOME"), "R", "x86_64-pc-linux-gnu-library", "4.0"))) quit(status = 1)'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies from pyproject.toml
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install rpy2
          pip install .

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/metaprivBIDS" >> $GITHUB_ENV

      - name: Verify R environment for rpy2
        run: |
          echo "R_HOME=$(R RHOME)" >> $GITHUB_ENV
          echo "PATH=$PATH:/usr/lib/R/bin" >> $GITHUB_ENV
          Rscript -e "sessionInfo()"

      - name: Run tests
        run: python -m pytest --maxfail=1 --disable-warnings
